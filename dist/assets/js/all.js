const readline=require("readline"),rl=readline.createInterface({input:process.stdin,output:process.stdout});module.exports={};var player=1,lastMovedBy="X",tictactoe=function(){var e=[];initBoard(e),console.log("Welcome! Here is your board."),displayBoard(e),playGame(e)},playGame=function(e){rl.question(`Player${player} (${lastMovedBy} where would you like to move?)`,(function(o){var t=(o=o.trim()).split(" "),a=parseInt(t[0]),i=parseInt(t[1]);if(inBound(a)&&inBound(i)){if(e[a][i]=1===player?"X":"O",displayBoard(e),isDraw(e))return console.log("DRAW!!"),rl.close();if(isPlayerWinning(e))return console.log(`Player${player} WINS!!`),rl.close()}player<2?player++:player--,lastMovedBy=1===player?"X":"O",playGame(e)}))};module.exports.isPlayerWinning=function(e){return e[0][0]===lastMovedBy&&e[0][1]===lastMovedBy&&e[0][2]===lastMovedBy||e[1][0]===lastMovedBy&&e[1][1]===lastMovedBy&&e[1][2]===lastMovedBy||e[2][0]===lastMovedBy&&e[2][1]===lastMovedBy&&e[2][2]===lastMovedBy||e[0][0]===lastMovedBy&&e[1][0]===lastMovedBy&&e[2][0]===lastMovedBy||e[0][1]===lastMovedBy&&e[1][1]===lastMovedBy&&e[2][1]===lastMovedBy||e[0][2]===lastMovedBy&&e[1][2]===lastMovedBy&&e[2][2]===lastMovedBy||e[0][0]===lastMovedBy&&e[1][1]===lastMovedBy&&e[2][2]===lastMovedBy||e[2][0]===lastMovedBy&&e[1][1]===lastMovedBy&&e[0][2]===lastMovedBy},module.exports.isDraw=function(e){for(var o=0;o<3;o++)for(var t=0;t<3;t++)if("-"===e[o][t])return!1;return!0},module.exports.inBound=function(e){return e>=0&&e<3};var initBoard=function(e){for(var o=0;o<3;o++){e[o]=[];for(var t=0;t<3;t++)e[o][t]="-"}},displayBoard=function(e){for(var o=0;o<3;o++){var t=e[o];console.log(t.join(","))}};tictactoe=require("./tictactoe");describe("check horizontal winning",(()=>{it("should win horizontal ",(()=>{expect(tictactoe.isPlayerWinning([["X","X","X"],["-","O","-"],["X","-","O"]])).toBe(!0)}))})),describe("check vertical winning",(()=>{it("should win vertical",(()=>{expect(tictactoe.isPlayerWinning([["X","-","O"],["X","O","O"],["X","O","O"]])).toBe(!0)}))})),describe("check diagonal winning",(()=>{it("should win primary diagonal",(()=>{expect(tictactoe.isPlayerWinning([["X","-","-"],["O","X","O"],["O","O","X"]])).toBe(!0)})),it("should win secondary diagonal",(()=>{expect(tictactoe.isPlayerWinning([["X","-","X"],["O","X","-"],["X","O","O"]])).toBe(!0)}))}));
//# sourceMappingURL=all.js.map
